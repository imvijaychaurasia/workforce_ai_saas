{"ast":null,"code":"var _jsxFileName = \"/Users/bizongo-admin/Documents/employee_ai/frontend/src/app/components/dashboard/ProviderManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport keycloak from '../../../keycloak';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProviderManagement = () => {\n  _s();\n  const [providers, setProviders] = useState([]);\n  const [providerName, setProviderName] = useState('');\n  const [providerConfig, setProviderConfig] = useState('');\n  const fetchProviders = async () => {\n    try {\n      const response = await fetch('/providers', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${keycloak.token}`,\n          'X-Tenant-ID': keycloak.realm\n        }\n      });\n      const data = await response.json();\n      setProviders(data);\n    } catch (error) {\n      console.error('Error fetching providers:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProviders();\n  }, []);\n  const handleAddProvider = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/providers', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${keycloak.token}`,\n          'X-Tenant-ID': keycloak.realm\n        },\n        body: JSON.stringify({\n          name: providerName,\n          config: JSON.parse(providerConfig)\n        })\n      });\n      if (response.ok) {\n        setProviderName('');\n        setProviderConfig('');\n        fetchProviders();\n      } else {\n        console.error('Error adding provider:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error adding provider:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Provider Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Configured Providers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: providers.map(provider => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: provider.name\n        }, provider.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Provider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddProvider,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Provider Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: providerName,\n            onChange: e => setProviderName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Configuration (JSON):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: providerConfig,\n            onChange: e => setProviderConfig(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Provider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ProviderManagement, \"pP/xwgAyfqMjhc7DW07NKL45Q8s=\");\n_c = ProviderManagement;\nexport default ProviderManagement;\nvar _c;\n$RefreshReg$(_c, \"ProviderManagement\");","map":{"version":3,"names":["React","useState","useEffect","keycloak","jsxDEV","_jsxDEV","ProviderManagement","_s","providers","setProviders","providerName","setProviderName","providerConfig","setProviderConfig","fetchProviders","response","fetch","headers","token","realm","data","json","error","console","handleAddProvider","e","preventDefault","method","body","JSON","stringify","name","config","parse","ok","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","map","provider","id","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/bizongo-admin/Documents/employee_ai/frontend/src/app/components/dashboard/ProviderManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport keycloak from '../../../keycloak';\n\nconst ProviderManagement = () => {\n  const [providers, setProviders] = useState([]);\n  const [providerName, setProviderName] = useState('');\n  const [providerConfig, setProviderConfig] = useState('');\n\n  const fetchProviders = async () => {\n    try {\n      const response = await fetch('/providers', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${keycloak.token}`,\n          'X-Tenant-ID': keycloak.realm,\n        },\n      });\n      const data = await response.json();\n      setProviders(data);\n    } catch (error) {\n      console.error('Error fetching providers:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchProviders();\n  }, []);\n\n  const handleAddProvider = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/providers', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${keycloak.token}`,\n          'X-Tenant-ID': keycloak.realm,\n        },\n        body: JSON.stringify({\n          name: providerName,\n          config: JSON.parse(providerConfig),\n        }),\n      });\n      if (response.ok) {\n        setProviderName('');\n        setProviderConfig('');\n        fetchProviders();\n      } else {\n        console.error('Error adding provider:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error adding provider:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Provider Management</h2>\n      <div>\n        <h3>Configured Providers</h3>\n        <ul>\n          {providers.map((provider) => (\n            <li key={provider.id}>{provider.name}</li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <h3>Add New Provider</h3>\n        <form onSubmit={handleAddProvider}>\n          <div>\n            <label>Provider Name:</label>\n            <input\n              type=\"text\"\n              value={providerName}\n              onChange={(e) => setProviderName(e.target.value)}\n              required\n            />\n          </div>\n          <div>\n            <label>Configuration (JSON):</label>\n            <textarea\n              value={providerConfig}\n              onChange={(e) => setProviderConfig(e.target.value)}\n              required\n            />\n          </div>\n          <button type=\"submit\">Add Provider</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ProviderManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}