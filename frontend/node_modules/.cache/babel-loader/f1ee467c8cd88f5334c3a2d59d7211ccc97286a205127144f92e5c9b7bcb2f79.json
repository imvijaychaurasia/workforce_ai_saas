{"ast":null,"code":"var _jsxFileName = \"/Users/bizongo-admin/Documents/employee_ai/frontend/src/app/components/dashboard/WorkflowManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport keycloak from '../../../keycloak';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkflowManagement = () => {\n  _s();\n  const [workflows, setWorkflows] = useState([]);\n  const [workflowName, setWorkflowName] = useState('');\n  const fetchWorkflows = async () => {\n    try {\n      const response = await fetch('/workflows', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${keycloak.token}`,\n          'X-Tenant-ID': keycloak.realm\n        }\n      });\n      const data = await response.json();\n      setWorkflows(data);\n    } catch (error) {\n      console.error('Error fetching workflows:', error);\n    }\n  };\n  useEffect(() => {\n    fetchWorkflows();\n  }, []);\n  const handleCreateWorkflow = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/workflows', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${keycloak.token}`,\n          'X-Tenant-ID': keycloak.realm\n        },\n        body: JSON.stringify({\n          name: workflowName,\n          definition: {\n            \"nodes\": [],\n            \"connections\": {}\n          }\n        })\n      });\n      if (response.ok) {\n        setWorkflowName('');\n        fetchWorkflows();\n      } else {\n        console.error('Error creating workflow:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error creating workflow:', error);\n    }\n  };\n  const handleTriggerWorkflow = async workflowId => {\n    try {\n      const response = await fetch(`/workflows/${workflowId}/trigger`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${keycloak.token}`,\n          'X-Tenant-ID': keycloak.realm\n        }\n      });\n      if (response.ok) {\n        fetchWorkflows();\n      } else {\n        console.error('Error triggering workflow:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error triggering workflow:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Workflow Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Workflows\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: workflows.map(workflow => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [workflow.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleTriggerWorkflow(workflow.id),\n            children: \"Trigger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, workflow.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Workflow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreateWorkflow,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Workflow Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: workflowName,\n            onChange: e => setWorkflowName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Workflow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkflowManagement, \"IW28GDKPT0d5PskDV4SZACSmiE8=\");\n_c = WorkflowManagement;\nexport default WorkflowManagement;\nvar _c;\n$RefreshReg$(_c, \"WorkflowManagement\");","map":{"version":3,"names":["React","useState","useEffect","keycloak","jsxDEV","_jsxDEV","WorkflowManagement","_s","workflows","setWorkflows","workflowName","setWorkflowName","fetchWorkflows","response","fetch","headers","token","realm","data","json","error","console","handleCreateWorkflow","e","preventDefault","method","body","JSON","stringify","name","definition","ok","statusText","handleTriggerWorkflow","workflowId","children","fileName","_jsxFileName","lineNumber","columnNumber","map","workflow","onClick","id","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/bizongo-admin/Documents/employee_ai/frontend/src/app/components/dashboard/WorkflowManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport keycloak from '../../../keycloak';\n\nconst WorkflowManagement = () => {\n  const [workflows, setWorkflows] = useState([]);\n  const [workflowName, setWorkflowName] = useState('');\n\n  const fetchWorkflows = async () => {\n    try {\n      const response = await fetch('/workflows', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${keycloak.token}`,\n          'X-Tenant-ID': keycloak.realm,\n        },\n      });\n      const data = await response.json();\n      setWorkflows(data);\n    } catch (error) {\n      console.error('Error fetching workflows:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchWorkflows();\n  }, []);\n\n  const handleCreateWorkflow = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/workflows', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${keycloak.token}`,\n          'X-Tenant-ID': keycloak.realm,\n        },\n        body: JSON.stringify({\n          name: workflowName,\n          definition: { \"nodes\": [], \"connections\": {} },\n        }),\n      });\n      if (response.ok) {\n        setWorkflowName('');\n        fetchWorkflows();\n      } else {\n        console.error('Error creating workflow:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error creating workflow:', error);\n    }\n  };\n\n  const handleTriggerWorkflow = async (workflowId) => {\n    try {\n      const response = await fetch(`/workflows/${workflowId}/trigger`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${keycloak.token}`,\n          'X-Tenant-ID': keycloak.realm,\n        },\n      });\n      if (response.ok) {\n        fetchWorkflows();\n      } else {\n        console.error('Error triggering workflow:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error triggering workflow:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Workflow Management</h2>\n      <div>\n        <h3>Existing Workflows</h3>\n        <ul>\n          {workflows.map((workflow) => (\n            <li key={workflow.id}>\n              {workflow.name}\n              <button onClick={() => handleTriggerWorkflow(workflow.id)}>\n                Trigger\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <h3>Create New Workflow</h3>\n        <form onSubmit={handleCreateWorkflow}>\n          <div>\n            <label>Workflow Name:</label>\n            <input\n              type=\"text\"\n              value={workflowName}\n              onChange={(e) => setWorkflowName(e.target.value)}\n              required\n            />\n          </div>\n          <button type=\"submit\">Create Workflow</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkflowManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}